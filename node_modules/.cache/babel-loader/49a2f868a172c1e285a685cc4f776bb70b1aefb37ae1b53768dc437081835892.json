{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a5252b6e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"words-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"main\", null, [/*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"https://gayane.dev/\",\n  target: \"_blank\",\n  rel: \"noreferrer\"\n}, \"From My Personal Website\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text\"\n}, \"software developer with over 9 years of experience, I have developed a strong foundation in crafting innovative and efficient technology solutions. My passion for technology and entrepreneurship led me to co-found Mythrill, where I currently serve as the CTO. I am proud to be recognized as one of the \\\"30under30\\\" Armenians in Tech and am constantly driven to push boundaries and make a positive impact in the industry. When I'm not coding, I enjoy exploring my creative side through art, music, and nature\")], -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3);\n}","map":{"version":3,"names":["class","_createElementVNode","href","target","rel","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3"],"sources":["/Users/daniel/Desktop/portfolio/dinamic-header/src/components/words.vue"],"sourcesContent":["<script>\nexport default {\n  name: 'words-c',\n  data() {\n  },\n  mounted() {\n    const splitWords = () => {\n  const textNode = document.querySelector(\".text\");\n  const text = textNode.textContent;\n  const newDomElements = text.split(\" \").map((text) => {\n    const highlighted =\n      text.startsWith(`\"30under30\"`) ||\n      text.startsWith(`CTO`) ||\n      text.startsWith(`Mythrill`);\n    return `<span class=\"word ${\n      highlighted ? \"highlighted\" : null\n    }\">${text}</span>`;\n  });\n  textNode.innerHTML = newDomElements.join(\"\");\n};\n\nconst renderCanvas = () => {\n  const Engine = Matter.Engine;\n  const Render = Matter.Render;\n  const World = Matter.World;\n  const Bodies = Matter.Bodies;\n  const Runner = Matter.Runner;\n  const params = {\n    isStatic: true,\n    render: {\n      fillStyle: \"transparent\"\n    }\n  };\n  const canvasSize = {\n    width: window.innerWidth,\n    height: window.innerHeight\n  };\n  const engine = Engine.create({});\n\n  const render = Render.create({\n    element: document.body,\n    engine: engine,\n    options: {\n      ...canvasSize,\n      background: \"transparent\",\n      wireframes: false\n    }\n  });\n  const floor = Bodies.rectangle(\n    canvasSize.width / 2,\n    canvasSize.height,\n    canvasSize.width,\n    50,\n    params\n  );\n  const wall1 = Bodies.rectangle(\n    0,\n    canvasSize.height / 2,\n    50,\n    canvasSize.height,\n    params\n  );\n  const wall2 = Bodies.rectangle(\n    canvasSize.width,\n    canvasSize.height / 2,\n    50,\n    canvasSize.height,\n    params\n  );\n  const top = Bodies.rectangle(\n    canvasSize.width / 2,\n    0,\n    canvasSize.width,\n    50,\n    params\n  );\n  const wordElements = document.querySelectorAll(\".word\");\n  const wordBodies = [...wordElements].map((elemRef) => {\n    const width = elemRef.offsetWidth;\n    const height = elemRef.offsetHeight;\n\n    return {\n      body: Matter.Bodies.rectangle(canvasSize.width / 2, 0, width, height, {\n        render: {\n          fillStyle: \"transparent\"\n        }\n      }),\n      elem: elemRef,\n      render() {\n        const { x, y } = this.body.position;\n        this.elem.style.top = `${y - 20}px`;\n        this.elem.style.left = `${x - width / 2}px`;\n        this.elem.style.transform = `rotate(${this.body.angle}rad)`;\n      }\n    };\n  });\n\n  const mouse = Matter.Mouse.create(document.body);\n  const mouseConstraint = Matter.MouseConstraint.create(engine, {\n    mouse,\n    constraint: {\n      stiffness: 0.2,\n      render: {\n        visible: false\n      }\n    }\n  });\n  mouse.element.removeEventListener(\"mousewheel\", mouse.mousewheel);\n  mouse.element.removeEventListener(\"DOMMouseScroll\", mouse.mousewheel);\n\n  World.add(engine.world, [\n    floor,\n    ...wordBodies.map((box) => box.body),\n    wall1,\n    wall2,\n    top,\n    mouseConstraint\n  ]);\n  render.mouse = mouse;\n  Runner.run(engine);\n  Render.run(render);\n\n  (function rerender() {\n    wordBodies.forEach((element) => {\n      element.render();\n    });\n    Matter.Engine.update(engine);\n    requestAnimationFrame(rerender);\n  })();\n};\n\nwindow.addEventListener(\"DOMContentLoaded\", (event) => {\n  splitWords();\n  renderCanvas();\n});\n  }\n}\n</script>\n\n<template>\n<div class=\"words-container\">\n<main>\n  <a href=\"https://gayane.dev/\" target=\"_blank\" rel=\"noreferrer\">From My Personal Website</a>\n  <div class=\"text\">software developer with over 9 years of experience, I have developed a strong foundation in crafting innovative and efficient technology solutions. My passion for technology and entrepreneurship led me to co-found Mythrill, where I currently serve as the CTO. I am proud to be recognized as one of the \"30under30\" Armenians in Tech and am constantly driven to push boundaries and make a positive impact in the industry. When I'm not coding, I enjoy exploring my creative side through art, music, and nature</div>\n</main>\n</div>\n</template>\n\n\n\n<style scoped>\n.words-container {\n  margin: 0;\n  padding: 0;\n  background: #000fff;\n  color: transparent;\n  font-family: 'Inconsolata', monospace;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n}\n* {\n  user-select: none;\n}\n.word {\n  position: absolute;\n  cursor: grab;\n  font-size: 30px;\n  color: #ffeb3b;\n}\n.word.highlighted {\n  font-weight: bold;\n  color: black;\n}\n\na {\n  text-decoration: none;\n  color: black;\n  display: block;\n  padding: 1rem;\n}\n</style>"],"mappings":";;;EA4IKA,KAAK,EAAC;AAAiB;gEAC5BC,mBAAA,CAGO,e,aAFLA,mBAAA,CAA2F;EAAxFC,IAAI,EAAC,qBAAqB;EAACC,MAAM,EAAC,QAAQ;EAACC,GAAG,EAAC;GAAa,0BAAwB,G,aACvFH,mBAAA,CAAkhB;EAA7gBD,KAAK,EAAC;AAAM,GAAC,8fAA0f,E;oBAF9gBK,UAGO,C;;uBAJPC,mBAAA,CAKM,OALNC,UAKM,EAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}