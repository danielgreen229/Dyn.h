{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction valueToPoint(value, index, total) {\n  var x = 0;\n  var y = -value * 0.9;\n  var angle = Math.PI * 2 / total * index;\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var tx = x * cos - y * sin + 100;\n  var ty = x * sin + y * cos + 100;\n  return {\n    x: tx,\n    y: ty\n  };\n}\nfunction generatePoints(stats) {\n  var total = stats.length;\n  return stats.map(function (stat, index) {\n    var point = valueToPoint(stat, index, total);\n    return point.x + \",\" + point.y;\n  }).join(\" \");\n}\nexport default {\n  name: \"dynamicState\",\n  data: function () {\n    var defaultSides = 10;\n    var stats = Array.apply(null, {\n      length: defaultSides\n    }).map(function () {\n      return 100;\n    });\n    return {\n      stats: stats,\n      points: generatePoints(stats),\n      sides: defaultSides,\n      minRadius: 50,\n      interval: null,\n      updateInterval: 500\n    };\n  },\n  watch: {\n    sides: function (newSides, oldSides) {\n      var sidesDifference = newSides - oldSides;\n      if (sidesDifference > 0) {\n        for (var i = 1; i <= sidesDifference; i++) {\n          this.stats.push(this.newRandomValue());\n        }\n      } else {\n        var absoluteSidesDifference = Math.abs(sidesDifference);\n        for (var i = 1; i <= absoluteSidesDifference; i++) {\n          this.stats.shift();\n        }\n      }\n    },\n    stats: function (newStats) {\n      TweenLite.to(this.$data, this.updateInterval / 1000, {\n        points: generatePoints(newStats)\n      });\n    },\n    updateInterval: function () {\n      this.resetInterval();\n    }\n  },\n  mounted: function () {\n    this.resetInterval();\n  },\n  methods: {\n    randomizeStats: function () {\n      var vm = this;\n      this.stats = this.stats.map(function () {\n        return vm.newRandomValue();\n      });\n    },\n    newRandomValue: function () {\n      return Math.ceil(this.minRadius + Math.random() * (100 - this.minRadius));\n    },\n    resetInterval: function () {\n      var vm = this;\n      clearInterval(this.interval);\n      this.randomizeStats();\n      this.interval = setInterval(function () {\n        vm.randomizeStats();\n      }, this.updateInterval);\n    }\n  }\n};","map":{"version":3,"names":["valueToPoint","value","index","total","x","y","angle","Math","PI","cos","sin","tx","ty","generatePoints","stats","length","map","stat","point","join","name","data","defaultSides","Array","apply","points","sides","minRadius","interval","updateInterval","watch","newSides","oldSides","sidesDifference","i","push","newRandomValue","absoluteSidesDifference","abs","shift","newStats","TweenLite","to","$data","resetInterval","mounted","methods","randomizeStats","vm","ceil","random","clearInterval","setInterval"],"sources":["/Users/daniel/Desktop/portfolio/dinamic-header/src/components/dynamicState.vue"],"sourcesContent":["<template>\n  <div id=\"demo\">\n  <svg width=\"200\" height=\"200\">\n    <polygon :points=\"points\"></polygon>\n    <circle cx=\"100\" cy=\"100\" r=\"90\"></circle>\n  </svg>\n  <label>Sides: {{ sides }}</label>\n  <input type=\"range\" min=\"3\" max=\"500\" v-model.number=\"sides\" />\n  <label>Minimum Radius: {{ minRadius }}%</label>\n  <input type=\"range\" min=\"0\" max=\"90\" v-model.number=\"minRadius\" />\n  <label>Update Interval: {{ updateInterval }} milliseconds</label>\n  <input type=\"range\" min=\"10\" max=\"2000\" v-model.number=\"updateInterval\" />\n</div>\n</template>\n\n  \n\n<script>\n\nfunction valueToPoint(value, index, total) {\n  var x = 0;\n  var y = -value * 0.9;\n  var angle = ((Math.PI * 2) / total) * index;\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var tx = x * cos - y * sin + 100;\n  var ty = x * sin + y * cos + 100;\n  return { x: tx, y: ty };\n}\n\nfunction generatePoints(stats) {\n  var total = stats.length;\n  return stats\n    .map(function(stat, index) {\n      var point = valueToPoint(stat, index, total);\n      return point.x + \",\" + point.y;\n    })\n    .join(\" \");\n}\n\nexport default {\n  name: \"dynamicState\",\n  data: function() {\n    var defaultSides = 10;\n    var stats = Array.apply(null, { length: defaultSides }).map(\n      function() {\n        return 100;\n      }\n    );\n    return {\n      stats: stats,\n      points: generatePoints(stats),\n      sides: defaultSides,\n      minRadius: 50,\n      interval: null,\n      updateInterval: 500\n    };\n  },\n  watch: {\n    sides: function(newSides, oldSides) {\n      var sidesDifference = newSides - oldSides;\n      if (sidesDifference > 0) {\n        for (var i = 1; i <= sidesDifference; i++) {\n          this.stats.push(this.newRandomValue());\n        }\n      } else {\n        var absoluteSidesDifference = Math.abs(sidesDifference);\n        for (var i = 1; i <= absoluteSidesDifference; i++) {\n          this.stats.shift();\n        }\n      }\n    },\n    stats: function(newStats) {\n      TweenLite.to(this.$data, this.updateInterval / 1000, {\n        points: generatePoints(newStats)\n      });\n    },\n    updateInterval: function() {\n      this.resetInterval();\n    }\n  },\n  mounted: function() {\n    this.resetInterval();\n  },\n  methods: {\n    randomizeStats: function() {\n      var vm = this;\n      this.stats = this.stats.map(function() {\n        return vm.newRandomValue();\n      });\n    },\n    newRandomValue: function() {\n      return Math.ceil(\n        this.minRadius + Math.random() * (100 - this.minRadius)\n      );\n    },\n    resetInterval: function() {\n      var vm = this;\n      clearInterval(this.interval);\n      this.randomizeStats();\n      this.interval = setInterval(function() {\n        vm.randomizeStats();\n      }, this.updateInterval);\n    }\n  }\n}\n\n</script>\n\n\n<style>\n  svg {\n    display: block;\n  }\n  polygon {\n    fill: #41b883;\n  }\n  circle {\n    fill: transparent;\n    stroke: #35495e;\n  }\n  input[type=\"range\"] {\n    display: block;\n    width: 100%;\n    margin-bottom: 15px;\n  }\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}