{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-62347cc7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"object\", {\n  data: \"@/assets/imgs/obj/test.svg\",\n  width: \"300\",\n  height: \"300\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _hoisted_2);\n}","map":{"version":3,"names":["_createElementVNode","data","width","height","_hoisted_1","_createElementBlock","_hoisted_2"],"sources":["/Users/daniel/Desktop/portfolio/dinamic-header/src/components/animFlowers.vue"],"sourcesContent":["<script>\nexport default {\n\tname: 'flow-anim',\n\tmethods: {\n\t},\n\tmounted() {\n\t\tsetInterval(calcPaths, 9500)\n\n\t\tfunction calcPaths(totalDur) {\n\t\t// unset 'animated' class to body which will reset the animation\n\t\tdocument.body.classList.remove('animated')\n\n\t\t// get all SVG elements - lines and dots\n\t\tconst paths = document.querySelectorAll('.autograph__path')\n\t\t// prepare path length variable\n\t\tlet len = 0\n\t\t// prepare animation delay length variable\n\t\tlet delay = 0\n\n\t\t// escape if no elements found\n\t\tif (!paths.length) {\n\t\treturn false\n\t\t}\n\n\t\t// set duration in seconds of animation to default if not set\n\t\tconst totalDuration = totalDur || 5\n\n\t\t// calculate the full path length\n\t\tpaths.forEach((path) => {\n\t\tconst totalLen = path.getTotalLength()\n\t\tlen += totalLen\n\t\t})\n\n\t\tpaths.forEach((path) => {\n\t\tconst pathElem = path\n\t\t// get current path length\n\t\tconst totalLen = path.getTotalLength()\n\t\t// calculate current animation duration\n\t\tconst duration = totalLen / len * totalDuration\n\n\t\t// set animation duration and delay\n\t\tpathElem.style.animationDuration = `${duration < 0.2 ? 0.2 : duration}s`\n\t\tpathElem.style.animationDelay = `${delay}s`\n\n\t\t// set dash array and offset to path length - this is how you hide the line\n\t\tpathElem.setAttribute('stroke-dasharray', totalLen)\n\t\tpathElem.setAttribute('stroke-dashoffset', totalLen)\n\n\t\t// set delay for the next path - added .2 seconds to make it more realistic\n\t\tdelay += duration + 0.2\n\t\t})\n\n\t\t// set 'animated' class to body which will start the animation\n\t\tdocument.body.classList.add('animated')\n\n\t\treturn true\n\t\t}\n\n\t\tcalcPaths()\n\t}\n}\n</script>\n\n<template>\n\t<div>\n\t\t<object data=\"@/assets/imgs/obj/test.svg\" width=\"300\" height=\"300\"> </object>\n\n\t</div>\n</template>\n\n\n\n<style scoped>\n.autograph {\nwidth: 1200px;\n}\n\n.autograph__path {\nanimation-timing-function: linear;\nanimation-fill-mode: forwards;\n\n.animated & {\nopacity: 1;\nanimation-name: line;\n}\n}\n\n@keyframes line {\n100% {\nstroke-dashoffset: 0;\n}\n}\n</style>\n\n\n\n"],"mappings":";;gEAiEEA,mBAAA,CAA6E;EAArEC,IAAI,EAAC,4BAA4B;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;oBAA7DC,UAA6E,C;;uBAD9EC,mBAAA,CAGM,aAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}